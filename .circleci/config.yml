version: 2

jobs:
  unit_test:

    machine: true

    steps:

      - checkout

      # restore cached dependencies
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      - run: npm install

      # cache dependencies
      - save_cache:
         key: dependency-cache-{{ checksum "package.json" }}
         paths:
           - node_modules

      # build Docker image
      - run: |
          TAG=$CIRCLE_BUILD_NUM
          USERNAME=danielesalvatore
          REPO=serverless-memory-game
          docker build -t $USERNAME/$REPO:$TAG .
          docker run -d -p 3000:3000 -e AWS_ACCESS_KEY_ID=fake -e AWS_SECRET_ACCESS_KEY=fake $USERNAME/$REPO:$TAG

      # wait for container to start
      - run: |
              for i in 1 2 3 4 5 ;
                do curl --retry 10 --retry-delay 2 http://127.0.0.1:3000 && break || sleep 15;
              done

              if [ i = 5 ];
                then exit 1;
              else
                exit 0;
              fi;

      # run tests!
      - run: npm test

  deployment_aws:

    working_directory: ~/app

    docker:
      - image: jimdo/serverless-offline

    steps:

      - checkout

      # restore cached dependencies
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      - run: npm install

      # cache dependencies
      - save_cache:
         key: dependency-cache-{{ checksum "package.json" }}
         paths:
           - node_modules

      - deploy:
          name: Deploy to AWS if tests pass and branch is Master
          command: sls deploy

workflows:

  version: 2
  
  test_and_deploy:

    jobs:

      - unit_test

      - deployment_aws:
          requires:
            - unit_test
          filters:
            branches:
              only: master